name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        app: [vanilla, react, vue, angular]
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            apps/**/package-lock.json

      - name: Install root dev dependencies
        run: npm ci

      - name: Install app dependencies
        working-directory: apps/${{ matrix.app }}
        shell: bash
        run: |
          if [ -f package-lock.json ]; then
            echo "Using npm ci in $(pwd)"
            npm ci
          else
            echo "No package-lock.json found in $(pwd); using npm install"
            npm install
          fi

      - name: Format check (app scope)
        continue-on-error: true
        run: node ./node_modules/prettier/bin/prettier.cjs --check "apps/${{ matrix.app }}"

      - name: Lint (vanilla)
        if: matrix.app == 'vanilla'
        run: npx eslint apps/vanilla --ext .js,.mjs,.cjs

      - name: Lint (react)
        if: matrix.app == 'react'
        working-directory: apps/react
        run: npm run lint

      - name: Lint (vue)
        if: matrix.app == 'vue'
        working-directory: apps/vue
        run: npm run lint

      - name: Lint (angular)
        if: matrix.app == 'angular'
        working-directory: apps/angular
        run: npm run lint

      - name: Test (vanilla, with coverage)
        if: matrix.app == 'vanilla'
        working-directory: apps/vanilla
        run: npm run coverage

      - name: Test (react with coverage)
        if: matrix.app == 'react'
        working-directory: apps/react
        run: npm run coverage

      - name: Test (vue with coverage)
        if: matrix.app == 'vue'
        working-directory: apps/vue
        run: npm run coverage

      - name: Test (angular)
        if: matrix.app == 'angular'
        working-directory: apps/angular
        run: npm run test:ci

      - name: Build app
        working-directory: apps/${{ matrix.app }}
        run: npm run build

      - name: Upload coverage (vanilla)
        if: matrix.app == 'vanilla' && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage
          path: apps/vanilla/coverage
          if-no-files-found: ignore

      - name: Upload coverage (react)
        if: matrix.app == 'react' && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-react
          path: apps/react/coverage
          if-no-files-found: ignore

      - name: Upload coverage (vue)
        if: matrix.app == 'vue' && always()
        uses: actions/upload-artifact@v4
        with:
          name: coverage-vue
          path: apps/vue/coverage
          if-no-files-found: ignore

      - name: Upload dist (vanilla/vue/angular)
        if: (matrix.app == 'vanilla' || matrix.app == 'vue' || matrix.app == 'angular') && always()
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.app }}
          path: apps/${{ matrix.app }}/dist
          if-no-files-found: ignore

      - name: Upload .next (react)
        if: matrix.app == 'react' && always()
        uses: actions/upload-artifact@v4
        with:
          name: next-react
          path: apps/react/.next
          if-no-files-found: ignore
